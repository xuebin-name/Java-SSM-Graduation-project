<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nnljfl.dao.WayMapper">
  <resultMap id="BaseResultMap" type="com.nnljfl.bean.Way">
    <id column="way_id" jdbcType="INTEGER" property="wayId" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="way_datils" jdbcType="VARCHAR" property="wayDatils" />
    <result column="way_title" jdbcType="VARCHAR" property="wayTitle" />
    <result column="way_k1" jdbcType="VARCHAR" property="wayK1" />
    <result column="way_k2" jdbcType="VARCHAR" property="wayK2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    way_id, type_id, way_datils, way_title, way_k1, way_k2
  </sql>
  <select id="selectByExample" parameterType="com.nnljfl.bean.WayExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from way
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from way
    where way_id = #{wayId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from way
    where way_id = #{wayId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nnljfl.bean.WayExample">
    delete from way
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nnljfl.bean.Way">
    insert into way (way_id, type_id, way_datils, 
      way_title, way_k1, way_k2
      )
    values (#{wayId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{wayDatils,jdbcType=VARCHAR}, 
      #{wayTitle,jdbcType=VARCHAR}, #{wayK1,jdbcType=VARCHAR}, #{wayK2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nnljfl.bean.Way">
    insert into way
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wayId != null">
        way_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="wayDatils != null">
        way_datils,
      </if>
      <if test="wayTitle != null">
        way_title,
      </if>
      <if test="wayK1 != null">
        way_k1,
      </if>
      <if test="wayK2 != null">
        way_k2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wayId != null">
        #{wayId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="wayDatils != null">
        #{wayDatils,jdbcType=VARCHAR},
      </if>
      <if test="wayTitle != null">
        #{wayTitle,jdbcType=VARCHAR},
      </if>
      <if test="wayK1 != null">
        #{wayK1,jdbcType=VARCHAR},
      </if>
      <if test="wayK2 != null">
        #{wayK2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nnljfl.bean.WayExample" resultType="java.lang.Long">
    select count(*) from way
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update way
    <set>
      <if test="record.wayId != null">
        way_id = #{record.wayId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.wayDatils != null">
        way_datils = #{record.wayDatils,jdbcType=VARCHAR},
      </if>
      <if test="record.wayTitle != null">
        way_title = #{record.wayTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.wayK1 != null">
        way_k1 = #{record.wayK1,jdbcType=VARCHAR},
      </if>
      <if test="record.wayK2 != null">
        way_k2 = #{record.wayK2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update way
    set way_id = #{record.wayId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      way_datils = #{record.wayDatils,jdbcType=VARCHAR},
      way_title = #{record.wayTitle,jdbcType=VARCHAR},
      way_k1 = #{record.wayK1,jdbcType=VARCHAR},
      way_k2 = #{record.wayK2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nnljfl.bean.Way">
    update way
    <set>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="wayDatils != null">
        way_datils = #{wayDatils,jdbcType=VARCHAR},
      </if>
      <if test="wayTitle != null">
        way_title = #{wayTitle,jdbcType=VARCHAR},
      </if>
      <if test="wayK1 != null">
        way_k1 = #{wayK1,jdbcType=VARCHAR},
      </if>
      <if test="wayK2 != null">
        way_k2 = #{wayK2,jdbcType=VARCHAR},
      </if>
    </set>
    where way_id = #{wayId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nnljfl.bean.Way">
    update way
    set type_id = #{typeId,jdbcType=INTEGER},
      way_datils = #{wayDatils,jdbcType=VARCHAR},
      way_title = #{wayTitle,jdbcType=VARCHAR},
      way_k1 = #{wayK1,jdbcType=VARCHAR},
      way_k2 = #{wayK2,jdbcType=VARCHAR}
    where way_id = #{wayId,jdbcType=INTEGER}
  </update>
</mapper>